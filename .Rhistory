sampleIntegrated[[]]
sampleIntegrated <- FindVariableFeatures(object = sampleIntegrated, selection.method = 'vst', nfeatures = 1000)
sampleIntegrated@assays$RNA@var.features
sampleIntegrated[['percent_mito']]
sampleIntegrated[['nFeature_HTO']]
sampleIntegrated[['nFeature_SAL']]
sampleIntegrated[['nFeature_RNA']]
sampleIntegrated[['origin_indent']]
sampleIntegrated[['origin_inden']]
sampleIntegrated[['nCount_RNA']]
cov(rna)
?cova
?cov
cov(rna@counts)
cov(rna@data)
rna
rna@scale.data
rna@counts
cov(as.matrix(rna@counts))
library(Seurat)
memory.limit(9999999999)
load("C:/Users/alexw/School/R-work/SimilarityNetwork/sampleIntegratedSC_1_Step1.Rdata")
sampleIntegrated['percent_mt']
sampleIntegrated$percent.mt
sampleIntegrated[percent_mt]
sampleIntegrated[['ribosomal']] <- PercentageFeatureSet(sampleIntegrated, pattern = "^RT-")
sampleIntegrated$ribosomal
sampleIntegrated[['ribosomal']] <- PercentageFeatureSet(sampleIntegrated, pattern = "^RPS")
sampleIntegrated$ribosomal
sampleIntegrated[['RPS']] <- PercentageFeatureSet(sampleIntegrated, pattern = "^RPS")
sampleIntegrated$RPS
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
VlnPlot(sampleIntegrated, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(pbmc, feature1 = "nCount_RNA", feature2 = "percent.mt")
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(sampleIntegrated, feature1 = "nCount_RNA", feature2 = "percent.mt")
plot2 <- FeatureScatter(sampleIntegrated, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
plot1 + plot2
# select only cells which have over 200 RNA genes but less than 2500. and cells that contain over 1000 UMIs
selected <- WhichCells(sampleIntegrated, expression = nCount_RNA > 1000 & nFeature_RNA > 1000 & nFeature_RNA < 3000 & percent.mt < 5)
plot2
plot1
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(sampleIntegrated, feature1 = "nCount_RNA", feature2 = "percent.mt", cells = RNA)
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(sampleIntegrated@assays$RNA, feature1 = "nCount_RNA", feature2 = "percent.mt", cells)
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(sampleIntegrated@assays$RNA, feature1 = "nCount_RNA", feature2 = "percent.mt")
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(sampleIntegrated@assays, feature1 = "nCount_RNA", feature2 = "percent.mt")
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(sampleIntegrated, feature1 = "nCount_RNA", feature2 = "percent.mt", cells = sampleIntegrated@assays$RNA)
plot2 <- FeatureScatter(sampleIntegrated, feature1 = "percent.mt", feature2 = "nFeature_RNA")
plot2
# select only cells which have over 200 RNA genes but less than 2500. and cells that contain over 1000 UMIs
selected <- WhichCells(sampleIntegrated, expression = nCount_RNA > 1000 & nFeature_RNA > 1000 & nFeature_RNA < 3000 & percent.mt >1.5)
rownames(sampleIntegrated[['ADT']])
rownames(sampleIntegrated[['SAL']])
rownames(sampleIntegrated[['RNA']])
DefaultAssay(sampleIntegrated)
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(sampleIntegrated, feature1 = "nCount_RNA", feature2 = "percent.mt", cells = sampleIntegrated@assays$RNA)
#s2 = sampleIntegrated[rowSums(sampleIntegrated) != 0, ] # remove genes never expressed by any cell
plot1 <- FeatureScatter(sampleIntegrated, feature1 = "nCount_RNA", feature2 = "percent.mt", pt.size = 1)
plot1
plot2 <- FeatureScatter(sampleIntegrated, feature1 = "percent.mt", feature2 = "nFeature_RNA", pt.size = .5)
plot2
colnames(sampleIntegrated)
rownames(sampleIntegrated)
sampleIntegrated[percent_mt]
sampleIntegrated[['percent_mt']]
sampleIntegerated <- NormalizeData(object = sampleIntegrated, assay = "RNA") # make sure they are on comparable scale
library('rdist')
b <- 10:15
b
b[1, 2+1, ]
b[1, 2+1 ]
b[1: 2+1 ]
b[1: 2+1,  ]
b[1: 2+1, ]
b[1:2+1, ]
b[1:2, ]
b[1:2]
b[2:2]
b[2:5]
b <- 15: 11
b
apply(b, 1, sort)
lapply(b, 1, sort)
lapply(b, sort)
b<- lapply(b, sort)
b
b
class(b)
b[1]
b[[2]]
b$2
b[[2]]
b<- lapply(b, sort(decreasing = TRUE))
b<- lapply(b, sort(b,decreasing = TRUE))
D = matrix(runif(400), nrow=20)
D
class(d)
class(D)
sortedColumns <- as.matrix(t(apply(D, 2, sort)))
sortedColumns
View(sortedColumns)
sortedColumns[, 1:15]
dim(D[1])
dim(D)
1:dim(x)[1]
1:dim(D)[1]
D[, 2]
View(D)
D[3, ] <- 10
D[3, ]
D[3, 2:3 ] <- 1:2
D[3, ]
diag(m)
diag(D)
load("C:/Users/alexw/School/R-work/BREM/.RData")
library(BREMSC)
# seven cell types
result6 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
save(result6, file = "result6.Rdata")
# seven cell types
result7 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
save(result7, file = "result7.Rdata")
table(result7$clusterID)
table(result6$clusterID)
library(cluster)
library(mclust)
adjustedRandIndex(result6$clusterID, result7$clusterID)
isSymmetric(rmatrix)
View(rmatrix)
View(smatrix)
isSymmetric(smatrix)
x1 <- diag(3)
x1
t(x1)
rm(x1)
x1 <- matrix(c(1,2,2,3), 2)
x1
t(x1)
rm(x1)
load("C:/Users/alexw/School/R-work/SimilarityNetwork/sampleIntegratedSC_1_Step1.Rdata")
memory.limit(99999)
load("C:/Users/alexw/School/R-work/SimilarityNetwork/sampleIntegratedSC_1_Step1.Rdata")
sampleIntegrated$nCount_RNA
isSymmetric(sampleIntegrated$nCount_RNA)
sampleIntegrated@assays
isSymmetric(sampleIntegrated@assays$RNA@counts)
isSymmetric(as.matrix(sampleIntegrated@assays$RNA@counts))
rm(sampleIntegrated)
library(BREMSC)
# seven cell types
result11 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
save(result11, file = "result11.Rdata")
library(aricode)
ARI(result11$clusterID, myls)
rm(list=ls())
load("C:/Users/alexw/School/R-work/BREM/.RData")
load("~/result11.Rdata")
ARI(result11$clusterID, myls)
ARI(myls, result11$clusterID)
ARI(myls, result8$clusterID)
ARI(myls, result9$clusterID)
ARI(myls, result10$clusterID)
# seven cell types
result12 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
save(result12, file = "result12.Rdata")
ARI(result12$clusterID, myls)
ARI(myls, result12$clusterID)
ARI(myls, result10$clusterID)
ARI(myls, result8$clusterID)
ARI(myls, result6$clusterID)
ARI(myls, result5$clusterID)
ARI(myls, result7$clusterID)
ARI(myls, result9$clusterID)
AMI(myls, result12$clusterID)
AMI(myls, result11$clusterID)
AMI(myls, result9$clusterID)
AMI(myls, result7$clusterID)
ARI(myls, result7$clusterID) # .530
AMI(myls, result4$clusterID) # .6721
ARI(myls, result4$clusterID) # .68945
AMI(myls, result8$clusterID)
ARI(myls, result8$clusterID)
# seven cell types
result12 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
# seven cell types
result13 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
save(result13, file = "result13.Rdata")
max(rmatrix[2, ])
max(rmatrix[1, ])
max(rmatrix[4, ])
max(rmatrix[5, ])
max(rmatrix[6, ])
max(rmatrix[10, ])
max(rmatrix[9, ])
max(smatrix[9, ])
max(smatrix[10, ])
library(matrixStats)
sa
rowRanges(rmatrix)
rowRanges(smatrix)
rm(list = list(bcell.plot, nk.plot, monocyte.plot, notNeeded, dendritic, count, clusteredCells))
rm(list = list(bcell.plot, nk.plot, monocyte.plot, notNeeded, dendtritic, count, clusteredCells))
rm(list(bcell.plot, nk.plot, monocyte.plot, notNeeded, dendtritic, count, clusteredCells))
rm(list = (bcell.plot, nk.plot, monocyte.plot, notNeeded, dendtritic, count, clusteredCells))
rm(list = bcell.plot, nk.plot, monocyte.plot, notNeeded, dendtritic, count, clusteredCells)
rm(to.remove)
rm(k, l)
memory.limit(99999)
rm(var_genes)
rm(bcell.ploy)
rm(bcell.plot)
rm(bcell.mat)
rm(cd16.mat)
res$clusterID
res
# seven cell types
result13 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
save(result13, file = "result13.Rdata")
library(BREMSC)
# seven cell types
result13 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
save(result13, file = "result13.Rdata")
ARI(result13$clusterID, myls)
hist(rmatrix[1, ])
hist(rmatrix[2, ])
hist(rmatrix[3, ])
hist(rmatrix[1000, ])
hist(rmatrix[1001, ])
hist(rmatrix[5, ])
hist(rmatrix[8, ])
view(rmatrix)
View(rmatrix)
rmatrix[1, 2]
hist(rmatrix[1, ])
library(ggplot2)
qplot(rmatrix, geom = 'histogram')
qplot(rmatrix[1, ], geom = 'histogram')
qplot(rmatrix[, 1], geom = 'histogram')
qplot(t(rmatrix[, 1]), geom = 'histogram')
qplot(t(rmatrix[, 1]), geom = 'histogram', binwidth=20)
qplot(t(rmatrix[, 1]), geom = 'histogram', binwidth=50)
qplot(t(rmatrix[, 1]), geom = 'histogram', binwidth=30)
qplot(rmatrix[, 1], geom = 'histogram', binwidth=30)
qplot(rmatrix[1, ], geom = 'histogram', binwidth=30)
qplot(rmatrix[1, ], geom = 'histogram', binwidth=50)
qplot(rmatrix[0, 1], geom = 'histogram', binwidth=50)
qplot(rmatrix[0, 1], geom = 'histogram', binwidth=50)
qplot(rmatrix[0, 1], geom = 'histogram', binwidth=30)
qplot(rmatrix[0, 1], geom = 'histogram', binwidth=50)
library(ggplot2)
plot(rmatrix[0, 1], geom = 'histogram', binwidth=50)
hist(rmatrix[0, 1])
hist(rmatrix[, 1])
hist(rmatrix[1, ])
hist(rmatrix[1, ])
hist(rmatrix[, 1])
1plot(rmatrix[, 1], geom = 'histogram', binwidth=50)
qplot(rmatrix[, 1], geom = 'histogram', binwidth=50)
setwd("C:/Users/alexw/School/R-work/BREM")
data <- Read10X("./filtered_feature_bc_matrix")
library(Seurat)
data <- Read10X("./filtered_feature_bc_matrix")
pbmc.rna <- CreateAssayObject(counts = data$`Gene Expression`)
pbmc.sal <- CreateAssayObject(counts = data$`Antibody Capture`)
qplot(pbmc.rna@counts, geom = 'histogram')
qplot(pbmc.rna@counts[1, ], geom = 'histogram')
qplot(pbmc.rna@counts[, 1], geom = 'histogram')
qplot(pbmc.rna@counts[, 5], geom = 'histogram')
qplot(pbmc.rna@counts[, 10], geom = 'histogram')
qplot(pbmc.rna@counts[, 7865], geom = 'histogram')
qplot(pbmc.rna@counts[, 7866], geom = 'histogram')
qplot(pbmc.rna@counts[, 7800], geom = 'histogram')
qplot(rmatrix[, 1], geom = 'histogram', binwidth=50)
qplot(rmatrix[, 1], geom = 'histogram', binwidth=20)
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10)
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10, ylab = "Frequencies", title="RNA normalized and 1000 highly variable")
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10, ylab = "Frequencies", title="RNA normalized and 1000 highly variable") +
labs(y = "Frequencies", title = "RNA normalized and 1000 highly variable")
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "RNA normalized and 1000 highly variable")
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10,) +
#  labs(y = "Frequencies", title = "RNA normalized and 1000 highly variable")
# why is all the frequency at 0?
if(!require(devtools)) install.packages("devtools")
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "RNA normalized and 1000 highly variable")
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 2], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 3], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 4], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 6], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix, geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[0, 1], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 2], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 3], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 3], geom = 'histogram', binwidth=20,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 2], geom = 'histogram', binwidth=20,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 6], geom = 'histogram', binwidth=20,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies")
qplot(rmatrix[, 6], geom = 'histogram', binwidth=20,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in  a random column")
qplot(rmatrix[, 6], geom = 'histogram', binwidth=20,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 10], geom = 'histogram', binwidth=20,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 11], geom = 'histogram', binwidth=20,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 11], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 11], geom = 'histogram', binwidth=20,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 11], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 7800], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 7000], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 7000], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 6000], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 2], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(rmatrix[, 5000], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies in a random column")
qplot(pbmc.rna@counts[, 7800], geom = 'histogram')
qplot(rmatrix[, 5000], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[, 6000], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[, 6100], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[1000, ], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[500, ], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[, 1000], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[, 5], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[, 100], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[, 101], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[, 120], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
max(rmatrix['JCHAIN', ])
qplot(rmatrix[, 1], geom = 'histogram', binwidth=10,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(rmatrix[, 1], geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(weight, data = rmatrix[, 1], geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(weight, data = rmatrix, geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(weight, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(1, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot([, 1], data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(, 1, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(2, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot( data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(x = 1, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(x = 2, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(x = 6000, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(x = 6000, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(6000, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
qplot(6000, data = as.data.frame(rmatrix), geom = 'histogram', binwidth=1,) +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
names(rmatrix)
as.data.frame(rmatrix, row.names='genes')
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'))
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells')) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=weight)) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=1)) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=1)) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=10000)) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=1000)) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=1000)) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[1, ])) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[, 1])) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[1, ])) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[1, ])) + geom_histogram()
y
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[, 1])) + geom_histogram()
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[, 1])) + geom_histogram(binwidth=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[, 6000])) + geom_histogram(binwidth=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[, 6001])) + geom_histogram(binwidth=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[, 6002])) + geom_histogram(binwidth=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(y=rmatrix[, 6100])) + geom_histogram(binwidth=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) + geom_histogram(binwidth=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) + geom_histogram(binwidth=1, color="black", fill="white")
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) + geom_histogram(binwidth=1, color="black", fill="red")
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) + geom_histogram(binwidth=1, color="black", fill="red")
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode")
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(weight)),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(rmatrix[, 6100])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(rmatrix[, 6100])),
color="blue", linetype="dashed", size=1)
mean(rmatrix[, 6100])
mean(rmatrix[, 6101])
mean(rmatrix[, 1])
mean(rmatrix[, 2])
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 2])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(rmatrix[, 2])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'), aes(x=rmatrix[, 6100])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(rmatrix[, 6100])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'),
aes(x=rmatrix[, 6100])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(rmatrix[, 6100])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(smatrix, row.names = 'Protein markers', col.names='Cells'),
aes(x=smatrix[, 14])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(smatrix[, 14])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(smatrix, row.names = 'Protein markers', col.names='Cells'),
aes(x=smatrix[, 14])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(smatrix[, 14])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(smatrix, row.names = 'Protein markers', col.names='Cells'),
aes(x=smatrix[, 14])) +
geom_histogram(binwidth=10, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(smatrix[, 14])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(smatrix, row.names = 'Protein markers', col.names='Cells'),
aes(x=smatrix[, 14])) +
geom_histogram(binwidth=20, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(smatrix[, 14])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(smatrix, row.names = 'Protein markers', col.names='Cells'),
aes(x=smatrix[, 6100])) +
geom_histogram(binwidth=20, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(smatrix[, 6100])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(smatrix, row.names = 'Protein markers', col.names='Cells'),
aes(x=smatrix[, 6101])) +
geom_histogram(binwidth=20, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(smatrix[, 6101])),
color="blue", linetype="dashed", size=1)
ggplot(as.data.frame(rmatrix, row.names = 'Genes', col.names='Cells'),
aes(x=rmatrix[, 6100])) +
geom_histogram(binwidth=1, color="black", fill="red") +
labs(y = "Frequencies", title = "Top 1000 variable gene frequencies on a random barcode") +
geom_vline(aes(xintercept=mean(rmatrix[, 6100])),
color="blue", linetype="dashed", size=1)
# seven cell types
result14 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
library(BREMSC)
# seven cell types
result14 <- BREMSC(smatrix, rmatrix, K=7, nChains=3, nMCMC=500)
save(result14, file = "result14.Rdata")
library(aricode)
ARI(result14$clusterID, myls)
